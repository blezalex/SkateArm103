/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_DRV_COMMS_CONFIG_PB_H_INCLUDED
#define PB_DRV_COMMS_CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Config_BalancingConfig { 
    float balance_expo; 
    uint32_t global_gyro_lpf; 
    float imu_beta; 
    int32_t max_control_angle; 
    int32_t max_rotation_rate; 
    int32_t max_current; 
    float rc_lpf; 
    bool has_stop_balance_angle;
    int32_t stop_balance_angle; 
    bool has_roll_yaw_mix;
    float roll_yaw_mix; 
    bool has_speed_tilt_yaw_mult;
    float speed_tilt_yaw_mult; 
    bool has_output_lpf_rc;
    float output_lpf_rc; 
    bool has_max_start_angle_steer;
    int32_t max_start_angle_steer; 
    bool has_shutoff_angle_steer;
    int32_t shutoff_angle_steer; 
    bool has_shutoff_angle_drive;
    int32_t shutoff_angle_drive; 
} Config_BalancingConfig;

typedef struct _Config_Callibration { 
    bool has_x_offset;
    float x_offset; 
    bool has_y_offset;
    float y_offset; 
    bool has_z_offset;
    float z_offset; 
} Config_Callibration;

typedef struct _Config_PidConfig { 
    float p; 
    float d; 
    float i; 
    float max_i; 
} Config_PidConfig;

typedef struct _Config { 
    bool has_callibration;
    Config_Callibration callibration; 
    Config_PidConfig balance_pid; 
    Config_PidConfig yaw_pid; 
    Config_BalancingConfig balance_settings; 
    bool has_rate_pid;
    Config_PidConfig rate_pid; 
} Config;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Config_init_default                      {false, Config_Callibration_init_default, Config_PidConfig_init_default, Config_PidConfig_init_default, Config_BalancingConfig_init_default, false, Config_PidConfig_init_default}
#define Config_Callibration_init_default         {false, 0.0f, false, 0.0f, false, 0.0f}
#define Config_PidConfig_init_default            {1200.0f, 0.65f, 0.1f, 3.0f}
#define Config_BalancingConfig_init_default      {0.15f, 2u, 0.02f, 30, 360, 25, 0.007f, false, 10, false, 0.0f, false, 0.0f, false, 150.0f, false, 15, false, 40, false, 14}
#define Config_init_zero                         {false, Config_Callibration_init_zero, Config_PidConfig_init_zero, Config_PidConfig_init_zero, Config_BalancingConfig_init_zero, false, Config_PidConfig_init_zero}
#define Config_Callibration_init_zero            {false, 0, false, 0, false, 0}
#define Config_PidConfig_init_zero               {0, 0, 0, 0}
#define Config_BalancingConfig_init_zero         {0, 0, 0, 0, 0, 0, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Config_BalancingConfig_balance_expo_tag  1
#define Config_BalancingConfig_global_gyro_lpf_tag 2
#define Config_BalancingConfig_imu_beta_tag      3
#define Config_BalancingConfig_max_control_angle_tag 4
#define Config_BalancingConfig_max_rotation_rate_tag 5
#define Config_BalancingConfig_max_current_tag   6
#define Config_BalancingConfig_rc_lpf_tag        7
#define Config_BalancingConfig_stop_balance_angle_tag 8
#define Config_BalancingConfig_roll_yaw_mix_tag  9
#define Config_BalancingConfig_speed_tilt_yaw_mult_tag 10
#define Config_BalancingConfig_output_lpf_rc_tag 11
#define Config_BalancingConfig_max_start_angle_steer_tag 12
#define Config_BalancingConfig_shutoff_angle_steer_tag 13
#define Config_BalancingConfig_shutoff_angle_drive_tag 14
#define Config_Callibration_x_offset_tag         4
#define Config_Callibration_y_offset_tag         5
#define Config_Callibration_z_offset_tag         6
#define Config_PidConfig_p_tag                   1
#define Config_PidConfig_d_tag                   2
#define Config_PidConfig_i_tag                   3
#define Config_PidConfig_max_i_tag               4
#define Config_callibration_tag                  1
#define Config_balance_pid_tag                   2
#define Config_yaw_pid_tag                       3
#define Config_balance_settings_tag              4
#define Config_rate_pid_tag                      5

/* Struct field encoding specification for nanopb */
#define Config_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  callibration,      1) \
X(a, STATIC,   REQUIRED, MESSAGE,  balance_pid,       2) \
X(a, STATIC,   REQUIRED, MESSAGE,  yaw_pid,           3) \
X(a, STATIC,   REQUIRED, MESSAGE,  balance_settings,   4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  rate_pid,          5)
#define Config_CALLBACK NULL
#define Config_DEFAULT NULL
#define Config_callibration_MSGTYPE Config_Callibration
#define Config_balance_pid_MSGTYPE Config_PidConfig
#define Config_yaw_pid_MSGTYPE Config_PidConfig
#define Config_balance_settings_MSGTYPE Config_BalancingConfig
#define Config_rate_pid_MSGTYPE Config_PidConfig

#define Config_Callibration_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, FLOAT,    x_offset,          4) \
X(a, STATIC,   OPTIONAL, FLOAT,    y_offset,          5) \
X(a, STATIC,   OPTIONAL, FLOAT,    z_offset,          6)
#define Config_Callibration_CALLBACK NULL
#define Config_Callibration_DEFAULT (const pb_byte_t*)"\x25\x00\x00\x00\x00\x2d\x00\x00\x00\x00\x35\x00\x00\x00\x00\x00"

#define Config_PidConfig_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    p,                 1) \
X(a, STATIC,   REQUIRED, FLOAT,    d,                 2) \
X(a, STATIC,   REQUIRED, FLOAT,    i,                 3) \
X(a, STATIC,   REQUIRED, FLOAT,    max_i,             4)
#define Config_PidConfig_CALLBACK NULL
#define Config_PidConfig_DEFAULT (const pb_byte_t*)"\x0d\x00\x00\x96\x44\x15\x66\x66\x26\x3f\x1d\xcd\xcc\xcc\x3d\x25\x00\x00\x40\x40\x00"

#define Config_BalancingConfig_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    balance_expo,      1) \
X(a, STATIC,   REQUIRED, UINT32,   global_gyro_lpf,   2) \
X(a, STATIC,   REQUIRED, FLOAT,    imu_beta,          3) \
X(a, STATIC,   REQUIRED, INT32,    max_control_angle,   4) \
X(a, STATIC,   REQUIRED, INT32,    max_rotation_rate,   5) \
X(a, STATIC,   REQUIRED, INT32,    max_current,       6) \
X(a, STATIC,   REQUIRED, FLOAT,    rc_lpf,            7) \
X(a, STATIC,   OPTIONAL, INT32,    stop_balance_angle,   8) \
X(a, STATIC,   OPTIONAL, FLOAT,    roll_yaw_mix,      9) \
X(a, STATIC,   OPTIONAL, FLOAT,    speed_tilt_yaw_mult,  10) \
X(a, STATIC,   OPTIONAL, FLOAT,    output_lpf_rc,    11) \
X(a, STATIC,   OPTIONAL, INT32,    max_start_angle_steer,  12) \
X(a, STATIC,   OPTIONAL, INT32,    shutoff_angle_steer,  13) \
X(a, STATIC,   OPTIONAL, INT32,    shutoff_angle_drive,  14)
#define Config_BalancingConfig_CALLBACK NULL
#define Config_BalancingConfig_DEFAULT (const pb_byte_t*)"\x0d\x9a\x99\x19\x3e\x10\x02\x1d\x0a\xd7\xa3\x3c\x20\x1e\x28\xe8\x02\x30\x19\x3d\x42\x60\xe5\x3b\x40\x0a\x4d\x00\x00\x00\x00\x55\x00\x00\x00\x00\x5d\x00\x00\x16\x43\x60\x0f\x68\x28\x70\x0e\x00"

extern const pb_msgdesc_t Config_msg;
extern const pb_msgdesc_t Config_Callibration_msg;
extern const pb_msgdesc_t Config_PidConfig_msg;
extern const pb_msgdesc_t Config_BalancingConfig_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Config_fields &Config_msg
#define Config_Callibration_fields &Config_Callibration_msg
#define Config_PidConfig_fields &Config_PidConfig_msg
#define Config_BalancingConfig_fields &Config_BalancingConfig_msg

/* Maximum encoded size of messages (where known) */
#define Config_BalancingConfig_size              113
#define Config_Callibration_size                 15
#define Config_PidConfig_size                    20
#define Config_size                              198

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
